name: Test

on:
  workflow_dispatch:
    inputs:
      env:
        description: "env"
        required: true
        default: "prod"

permissions:
  contents: read

jobs:
  test-environment:
    runs-on:
      labels:
        - runs-on
        - runner=2cpu-linux-x64
        - tag=env-test-protected
        - env=${{ inputs.env || 'prod' }}
    environment:
      name: test
      url: https://protected.example.com
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - run: echo Hello world

  test-environment-no-protection:
    runs-on:
      labels:
        - runs-on
        - runner=2cpu-linux-x64
        - tag=env-test-no-protection
        - env=${{ inputs.env || 'prod' }}
    environment:
      name: test-no-protection
      url: https://not-protected.example.com
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - run: echo Hello world

  test-preinstall-ok:
    runs-on: runs-on,runner=preinstall-ok,env=${{ inputs.env || 'prod' }}
    steps:
      - run: echo Hello world

  test-preinstall-ko:
    runs-on: runs-on,runner=preinstall-ko,env=${{ inputs.env || 'prod' }}
    steps:
      - run: echo Hello world

  test-ssd-mount:
    runs-on: runs-on,runner=2cpu-linux-arm64,family=c7gd,env=${{ inputs.env || 'prod' }}
    steps:
      - name: Disk usage
        run: |
          sudo lsblk -l
          sudo df -ah
      - uses: actions/checkout@v4

  test-linux:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - runs-on,runner=2cpu-linux-x64
          - runs-on,runner=4cpu-linux-x64
          - runs-on,runner=gofast,image=custom
          - runs-on,runner=gofast,cpu=1,hdd=41
          - runs-on,runner=1cpu-linux-arm64,image=ubuntu22-base-arm64
          - runs-on,runner=2cpu-linux-arm64,image=ubuntu22-full-arm64
          - runs-on,runner=2cpu-linux-arm64,ssh=false
    runs-on:
      labels:
        - ${{ matrix.runner }}
        - env=${{ inputs.env || 'prod' }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Disk usage
        run: df -ah
      - name: Check preinstall
        run: test -f /tmp/preinstalled || echo "Preinstall not found"
      - name: Setup
        run: |
          sudo apt-get update -qq && sudo apt-get install build-essential -y
          # source RUNS_ON env vars
          . /etc/environment
          curl https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-$RUNS_ON_AGENT_ARCH.tar.gz | sudo tar -xzf - -C /usr/local --strip-components=1
      - name: Environment Information
        run: npx envinfo
